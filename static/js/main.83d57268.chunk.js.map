{"version":3,"sources":["utils/index..js","components/Content.js","components/Header.js","components/Actions.js","components/Action.js","components/AppName.js","views/NotePage.js","components/Note.js","components/NoteList.js","views/HomePage.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getPosition","element","x","offsetTop","y","offsetLeft","getSize","width","height","Content","react_default","a","createElement","simplebar_react_esm","className","this","props","children","Component","Header","Actions","Action","containerClasses","concat","componentType","AppName","NotePage","noteId","Note","id","onClick","NoteList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","containerRef","React","createRef","state","notes","mockNotes","selectedNote","_this2","computeNoteClasses","note","ref","map","Note_Note","key","note-data","selectNote","bind","setState","createMockNote","Math","random","title","content","HomePage","NoteList_NoteList","AppRouter","react_router_dom","react_router","exact","path","component","routeResolver","homePage","noteDetailPage","notFoundPage","HomePage_HomePage","_ref","match","params","NotePage_NotePage","to","App","Header_Header","AppName_AppName","Content_Content","AppRouter_AppRouter","Actions_Actions","Action_Action","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83d57268.chunk.js","sourcesContent":["const getPosition = element => {\r\n  return {\r\n    x: element.offsetTop,\r\n    y: element.offsetLeft\r\n  }\r\n};\r\n\r\nconst getSize = element => {\r\n  return {\r\n    width: 0,\r\n    height: 0\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getPosition,\r\n  getSize\r\n};\r\n","import React, { Component } from 'react';\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nexport default class Content extends Component{\r\n  render() {\r\n    return (\r\n      <SimpleBar className={this.props.className}>\r\n        <div className=\"app-content--content\">\r\n          {this.props.children}\r\n        </div>\r\n      </SimpleBar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <div className=\"app-header--content\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Actions extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <div className=\"app-actions--content\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Action extends Component {\r\n  render() {\r\n    const containerClasses = `action action-${this.props.componentType || 'button'}`;\r\n    return (\r\n      <div className={containerClasses}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AppName extends Component {\r\n  render() {\r\n    return (\r\n      <div className='app-name'>\r\n        App Name\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NotePage extends Component {\r\n  render() {\r\n    return (\r\n      <h2>{this.props.noteId}</h2>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Note extends Component{\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} className={`note ${this.props.className}`} onClick={this.props.onClick}/>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\nimport {getPosition, getSize} from \"../utils/index.\";\r\n\r\nexport default class NoteList extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      notes: mockNotes,\r\n      selectedNote: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const computeNoteClasses = note => note.id === (this.state.selectedNote && this.state.selectedNote.id) ? 'selected' : '';\r\n    return (\r\n      <div className={`note-list ${this.state.selectedNote && 'has-selected'} ${this.props.className}`} ref={this.containerRef}>\r\n        {this.state.notes.map(note =>\r\n          <Note key={note.id}\r\n                id={note.id}\r\n                note-data={note}\r\n                className={computeNoteClasses(note)}\r\n                onClick={this.selectNote.bind(this, note)}/>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  selectNote (note) {\r\n    this.setState({\r\n      selectedNote: note\r\n    });\r\n    // update url\r\n    // expand card\r\n    // const element = document.getElementById(note.id)\r\n    // let card = {\r\n    //   position: getPosition(element),\r\n    //   size: getSize(element)\r\n    // };\r\n    // let container = {\r\n    //   position: getPosition(this.containerRef.current),\r\n    //   size: getSize(this.containerRef.current)\r\n    // };\r\n    // console.log(`translate3D(${-card.position.x},${-card.position.y},0)`);\r\n    // element.style.transform = `translate3D(${-card.position.x}px,${-card.position.y}px,0)`\r\n  }\r\n}\r\n\r\nconst createMockNote = () => {\r\n  const id = Math.random();\r\n  return {\r\n    id,\r\n    title: 'Title of ' + id,\r\n    content: 'Content of ' + id,\r\n  }\r\n};\r\nconst mockNotes = [\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote(),\r\n  createMockNote()\r\n];\r\n","import React, { Component } from 'react';\r\nimport NoteList from \"../components/NoteList\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <NoteList/>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport NotePage from \"./views/NotePage\";\r\nimport HomePage from \"./views/HomePage\";\r\n\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={routeResolver.homePage} />\r\n          <Route path=\"/note/:id\" component={routeResolver.noteDetailPage} />\r\n          <Route component={routeResolver.notFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst routeResolver = {\r\n  homePage: () => (<HomePage/>),\r\n  noteDetailPage: ({ match }) => {\r\n    const noteId = match.params.id;\r\n    return noteId ? (<NotePage noteId={noteId}/>) : (<Link to=\"/\">Back to Home</Link>)\r\n  },\r\n  notFoundPage: () => (<h2>404</h2>)\r\n};\r\n","import React, { Component } from 'react';\r\nimport Content from './components/Content'\r\nimport Header from \"./components/Header\";\r\nimport Actions from \"./components/Actions\";\r\nimport Action from \"./components/Action\";\r\nimport AppName from \"./components/AppName\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        <Header className=\"app-header\">\r\n          <AppName/>\r\n        </Header>\r\n        <Content className=\"app-content\">\r\n          <AppRouter/>\r\n        </Content>\r\n        <Actions className=\"app-actions\">\r\n          <Action componentType=\"bar\">1</Action>\r\n          <Action componentType=\"button\">2</Action>\r\n        </Actions>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}